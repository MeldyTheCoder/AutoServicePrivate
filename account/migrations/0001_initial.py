# Generated by Django 4.2.5 on 2023-09-28 22:33

import account.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(error_messages={'invalid': 'Неверный формат эл. почты.', 'required': 'Данное поле обязательно для заполнения.', 'unique': 'Данная эл. почта уже зарегистрирована.'}, help_text='Эл. почта пользователя. Должна быть уникальной', max_length=254, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(error_messages={'invalid': 'Неверный формат имени. Имя должно состоять только из символов кириллицы.', 'required': 'Данное поле обязательно для заполнения.'}, help_text='Должно состоять только из символов кириллицы.', max_length=50, validators=[django.core.validators.RegexValidator('[А-Я][а-я]+')], verbose_name='Имя')),
                ('last_name', models.CharField(error_messages={'invalid': 'Неверный формат фамилии. Имя должно состоять только из символов кириллицы.', 'required': 'Данное поле обязательно для заполнения.'}, help_text='Должно состоять только из символов кириллицы.', max_length=50, validators=[django.core.validators.RegexValidator('[А-Я][а-я]+')], verbose_name='Фамилия')),
                ('is_superuser', models.BooleanField(default=False, error_messages={'required': 'Данное поле обязательно для заполнения.'}, help_text='Отметьте, если хотите выдать пользователю права супер-пользователя.', verbose_name='Права супер-пользователя')),
                ('is_email_verified', models.BooleanField(default=False, error_messages={'required': 'Данное поле обязательно для заполнения.'}, help_text='Отметьте, если хотите автоматически подтвердить почту пользователя.', verbose_name='Почта пользователя подтверждена')),
                ('is_active', models.BooleanField(default=True, error_messages={'required': 'Данное поле обязательно для заполнения.'}, help_text='Отметьте, если хотите сделать пользователя активным или наоборот.', verbose_name='Пользователь активен')),
                ('is_staff', models.BooleanField(default=False, error_messages={'required': 'Данное поле обязательно для заполнения.'}, help_text='Отметьте, если хотите сделать пользователя рабочим персоналом данного сервиса.', verbose_name='Пользователь является сотрудником')),
                ('date_joined', models.DateTimeField(auto_now_add=True, error_messages={'required': 'Данное поле обязательно для заполнения.'}, help_text='Дата регистрации пользователя.', verbose_name='Дата регистрации')),
                ('date_password_updated', models.DateTimeField(auto_now_add=True, error_messages={'required': 'Данное поле обязательно для заполнения.'}, help_text='Дата последней смены пароля пользователя.', verbose_name='Дата смены пароля')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', account.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EmailNotifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('send_type', models.CharField(choices=[('email_verification', 'Подтверждение почты'), ('password_reset', 'Сброс пароля'), ('login_notification', 'Уведомление о входе в аккаунт')], default='login_notification', error_messages={'required': 'Данное поле обязательно для заполнения.'}, help_text='Укажите, по какой причине было отправлено письмо пользователю.', max_length=50, verbose_name='Тип отправления')),
                ('send_date', models.DateTimeField(auto_now_add=True, error_messages={'required': 'Данное поле обязательно для заполнения.'}, help_text='Укажите, когда было отправлено письмо.', verbose_name='Дата отправки')),
                ('to_user', models.ForeignKey(error_messages={'required': 'Данное поле обязательно для заполнения.'}, help_text='Укажите, кому было отправлено письмо.', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Кому')),
            ],
            options={
                'verbose_name': 'Почтовое отправление',
                'verbose_name_plural': 'Почтовые отправления',
            },
        ),
    ]
